# for 2013
sf_ass_data2013 <- sf_ass_data %>% filter(Closed.Roll.Year == 2013) %>% filter(!Assessed.Personal.Property.Value %in% NA)
write_csv(sf_ass_data2013,file = "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_ass_data2013.csv" )
# for 2012
sf_ass_data2012 <- sf_ass_data %>% filter(Closed.Roll.Year == 2012) %>% filter(!Assessed.Personal.Property.Value %in% NA)
write_csv(sf_ass_data2012,file = "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_ass_data2012.csv" )
parcels <- st_read("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Parcels/Parcels/sanfranparcel.shp")
names(parcels)[1] <- "Parcel.Number"
colnames(parcels)
sf_2019 <- right_join(parcels, sf_ass_data2019, by = "Parcel.Number")
class(sf_2019)
plot(sf_2019$geometry)
V1 <- 1:10
V1
set.seed(10)
V2 <- sample(1:100, size = 10)
V2
set.seed(50)
V3 <- runif(10, min = 0, max = 50)
V3
set.seed(50)
V4 <- sample(LETTERS[1:5], size = 10, replace = TRUE)
V4
m <- cbind(V1, V2, V3)
m
dat <- data.frame(V1, V2, V3, V4)
print(dat)
V4 <- sample(letters[1:5], size = 5, replace = FALSE)
print(dat)
rm(V!)
rm/v1
rm(V!)
rm(V1)
rm(V2)
RM(V3)
rm(V#)
rm(V3)
rm(V4)
rm(m)
rm(dat)
library(USF)
library(sf)
library(tidyverse)
library(tmap)
sf_ass_data <- read.csv("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Assessor_Historical_Secured_Property_Tax_Rolls.csv")
library(readr)
sf_ass_data2012 <- read_csv("localdrive/sf_ass_data2012.csv")
View(sf_ass_data2012)
library(readr)
sf_ass_data2013 <- read_csv("localdrive/sf_ass_data2013.csv")
View(sf_ass_data2013)
library(readr)
sf_ass_data2014 <- read_csv("localdrive/sf_ass_data2014.csv")
View(sf_ass_data2014)
library(readr)
sf_ass_data2015 <- read_csv("localdrive/sf_ass_data2015.csv")
View(sf_ass_data2015)
library(readr)
sf_ass_data2016 <- read_csv("localdrive/sf_ass_data2016.csv")
View(sf_ass_data2016)
library(readr)
sf_ass_data2017 <- read_csv("localdrive/sf_ass_data2017.csv")
View(sf_ass_data2017)
library(readr)
sf_ass_data2018 <- read_csv("localdrive/sf_ass_data2018.csv")
View(sf_ass_data2018)
library(readr)
sf_ass_data2019 <- read_csv("localdrive/sf_ass_data2019.csv")
View(sf_ass_data2019)
parcels <- st_read("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Parcels/Parcels/sanfranparcel.shp")
sf_2019 <- right_join(parcels, sf_ass_data2019, by = "Parcel.Number") %>% st_as_sf()
names(parcels)[1] <- "Parcel.Number"
sf_2019 <- right_join(parcels, sf_ass_data2019, by = "Parcel.Number") %>% st_as_sf()
library(USF)
st_write(sf_2019,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_2019.shp",
driver = "ESRI Shapefile")
library(here)
excel_sheets(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx.xlsx"))
library(readxl)
excel_sheets(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx.xlsx"))
excel_sheets(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"))
mpv_polkill <- read_excel("2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx",
sheet = "Roll Data 2007-2008")
ptaxdata_0708 <- read_excel(here("2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx",
sheet = "Roll Data 2007-2008"))
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx",
sheet = "Roll Data 2007-2008"))
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"),
sheet = "Roll Data 2007-2008")
ptaxdata_0708[3]
ptaxdata_0708[3] %>% as.numeric
library(tidyverse)
ptaxdata_0708[3] %>% as.numeric()
ptaxdata_0708[3] %>%  mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
ptaxdata_0708[3] %>%  mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) %>% as.numeric()
# read excel sheets
library(here)
library(readxl)
# read excel_sheet
excel_sheets(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"))
# specify worksheet 1 "Roll Data 2007-2008"
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"),
sheet = "Roll Data 2007-2008")
# edit col 3
ptaxdata_0708[3] %>%  mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) %>% as.integer()
names(mpv_polkill)[27] <- "Geography"
usethis::use_data(mpv_polkill, overwrite = TRUE)
ptaxdata_0708[3] %>%  mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) %>% as.integer()
ptaxdata_0708[3] <-ptaxdata_0708[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
ptaxdata_0708[3] <- as.numeric()
ptaxdata_0708[3] <- as.numeric(ptaxdata_0708[3])
ptaxdata_0708[3] <- unlist(ptaxdata_0708[3])
ptaxdata_0708[3] <- as.numeric(ptaxdata_0708[3])
ptaxdata_0708[3] <- lapply(as.numeric(ptaxdata_0708[3]))
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"),
sheet = "Roll Data 2007-2008")
ptaxdata_0708[3] <-ptaxdata_0708[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) %>%
unlist()
str(ptaxdata_0708[3])
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"),
sheet = "Roll Data 2007-2008")
ptaxdata_0708[3] <-ptaxdata_0708[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" "))) %>%
as.numeric(unlist(.))
as.numeric(unlist(ptaxdata_0708[3]))
ptaxdata_0708 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2007-2008.xlsx"),
sheet = "Roll Data 2007-2008")
ptaxdata_0708[3] <-ptaxdata_0708[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
parcels <- st_read("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Parcels/Parcels/sanfranparcel.shp")
library(sf)
parcels <- st_read("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Parcels/Parcels/sanfranparcel.shp")
names(parcels)[1] <- "Parcel.Number"
colnames(ptaxdata_0708)
names(parcels)[1] <- "RP1PRCLID"
sf_0708 <- right_join(parcels, ptaxdata_0708, by = "RP1PRCLID") %>% st_as_sf()
library(ggplot2)
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma") +
labs(title = "Assessed value of improvements 07/08")
quantile(ptaxdata_0708$RP1LNDVAL)
quantile(ptaxdata_0708$RP1LNDVAL) %>% count()
breaks <- c(1, 36370, 140186, 324305, 256020000)
sf0708_breaks <- c(1, 36370, 140186, 324305, 256020000)
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "grey100",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
natural.interval <-  classIntervals(ptaxdata_0708$RP1LNDVAL, n = 5, style = 'jenks')
library(tmap)
tmap_mode("view")
tm_shape(ptaxdata_0708$RP1LNDVAL) +
tm_polygons("RP1LNDVAL", title = "Assessed value of improvements 07/08",
style = "jenks", palette = "viridis")   +
tm_basemap(server = "OpenStreetMap", alpha = 0.7)
tmap_mode("view")
tm_shape(ptaxdata_0708) +
tm_polygons("RP1LNDVAL", title = "Assessed value of improvements 07/08",
style = "jenks", palette = "viridis")   +
tm_basemap(server = "OpenStreetMap", alpha = 0.7)
tmap_mode("view")
tm_shape(sf_0708) +
tm_polygons("RP1LNDVAL", title = "Assessed value of improvements 07/08",
style = "jenks", palette = "viridis")   +
tm_basemap(server = "OpenStreetMap", alpha = 0.7)
tmap_mode("view")
tm_shape(sf_0708$RP1LNDVAL) +
tm_polygons( title = "Assessed value of improvements 07/08",
style = "jenks", palette = "viridis")   +
tm_basemap(server = "OpenStreetMap", alpha = 0.7)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%
addPolygons(sf_0708$RP1LNDVAL)
# quantile(ptaxdata_0708$RP1LNDVAL)
# sf0708_breaks <- c(1, 36370, 140186, 324305, 256020000)
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "grey100",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
summarise(ptaxdata_0708$RP1LNDVAL)
max(ptaxdata_0708$RP1LNDVAL)
median(ptaxdata_0708$RP1LNDVAL)
sd(ptaxdata_0708$RP1LNDVAL)
sf0708_breaks <- c(1, 36370, 140186, 1475439, 256020000)
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "grey100",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_d(option = "magma", na.value = "light grey",
breaks = sf0708_breaks, option = "D") +
labs(title = "Assessed value of improvements 07/08")
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_d(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08").
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_d(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
sf_0708 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of improvements 07/08")
st_write(sf_2019,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
st_write(sf_0708,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
# 2012-13
ptaxdata_1213 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2012-2013.xlsx"),
sheet = "Roll Data 2012-2013")
# 2017-18
ptaxdata_1718 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2017-2018.xlsx"),
sheet = "Roll Data 2017-2018")
# 2019-20
ptaxdata_1920 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2019-2020.xlsx"),
sheet = "Roll Data 2019-2020")
# 2020-21
ptaxdata_2021 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2020-2021.xlsx"),
sheet = "Roll Data 2020-2021")
# 2012-13
ptaxdata_1213 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.20__SF_ASR_Secured_Roll_Data_2012-2013.xlsx"),
sheet = "Roll Data 2012-2013")
ptaxdata_1213[3] <-ptaxdata_1213[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
# 2017-18
ptaxdata_1718 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.12__SF_ASR_Secured_Roll_Data_2017-2018.xlsx"),
sheet = "Roll Data 2017-2018")
ptaxdata_1718[3] <-ptaxdata_1718[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
# 2019-20
ptaxdata_1920 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2020.7.10_SF_ASR_Secured_Roll_Data_2019-2020.xlsx"),
sheet = "Roll Data 2019-2020")
ptaxdata_1920[3] <-ptaxdata_1920[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
# 2020-21
ptaxdata_2021 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2021.7.28_SF_ASR_Secured_Roll_Data_2020-2021.xlsx"),
sheet = "Roll Data 2020-2021")
ptaxdata_2021[3] <-ptaxdata_2021[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
sf_1213 <- right_join(parcels, ptaxdata_1213, by = "RP1PRCLID") %>% st_as_sf()
sf_1718 <- right_join(parcels, ptaxdata_1718, by = "RP1PRCLID") %>% st_as_sf()
sf_1920 <- right_join(parcels, ptaxdata_1920, by = "RP1PRCLID") %>% st_as_sf()
sf_2021 <- right_join(parcels, ptaxdata_2021, by = "RP1PRCLID") %>% st_as_sf()
st_write(sf_1213,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
st_write(sf_1718,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
st_write(sf_1920,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
st_write(sf_2021,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_0708.shp",
driver = "ESRI Shapefile")
st_write(sf_1213,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1213.shp",
driver = "ESRI Shapefile")
st_write(sf_1718,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1718.shp",
driver = "ESRI Shapefile")
st_write(sf_1920,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1920.shp",
driver = "ESRI Shapefile")
st_write(sf_2021,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_2021.shp",
driver = "ESRI Shapefile")
sf_1920 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of land 07/08")
sf_1920 <- full_join(parcels, ptaxdata_1920, by = "RP1PRCLID") %>% st_as_sf()
sf_1920 %>%
ggplot(aes(fill = RP1LNDVAL)) +
geom_sf(color = NA) +
scale_fill_viridis_c(option = "magma", na.value = "light grey",
breaks = sf0708_breaks) +
labs(title = "Assessed value of land 07/08")
sf_2021 <- full_join(parcels, ptaxdata_2021, by = "RP1PRCLID") %>% st_as_sf()
# st_write(sf_1920,
#         "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1920.shp",
#         driver = "ESRI Shapefile")
st_write(sf_1920,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1920.shp",
driver = "ESRI Shapefile")
library(here)
library(readxl)
library(sf)
library(tidyverse)
ptaxdata_1920 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2020.7.10_SF_ASR_Secured_Roll_Data_2019-2020.xlsx"),
sheet = "Roll Data 2019-2020")
ptaxdata_1920[3] <-ptaxdata_1920[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
# 2020-21
ptaxdata_2021 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2021.7.28_SF_ASR_Secured_Roll_Data_2020-2021.xlsx"),
sheet = "Roll Data 2020-2021")
ptaxdata_2021[3] <-ptaxdata_2021[3] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
ptaxdata_1718 <- read_excel(here("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/assessors/2019.8.12__SF_ASR_Secured_Roll_Data_2017-2018.xlsx"),
sheet = "Roll Data 2017-2018")
ptaxdata_1920[2] <-ptaxdata_1920[2] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
ptaxdata_2021[2] <-ptaxdata_2021[2] %>%
mutate(across(where(is.character), str_remove_all, pattern = fixed(" ")))
parcels <- st_read("~/Clark/RA-ing/SummerInstitute/GIS/sanfran/Parcels/Parcels/sanfranparcel.shp")
names(parcels)[1] <- "RP1PRCLID"
sf_1920 <- right_join(parcels, ptaxdata_1920, by = "RP1PRCLID") %>% st_as_sf() # 2019-2020 incomplete data
sf_2021 <- right_join(parcels, ptaxdata_2021, by = "RP1PRCLID") %>% st_as_sf() # 2020-2021 incomplete data
#         driver = "ESRI Shapefile")
#
# st_write(sf_1718,
#         "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1718.shp",
#         driver = "ESRI Shapefile")
#
# st_write(sf_1920,
#         "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1920.shp",
#         driver = "ESRI Shapefile")
#
st_write(sf_2021,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_2021.shp",
driver = "ESRI Shapefile")
# st_write(sf_1213,
#         "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1213.shp",
#         driver = "ESRI Shapefile")
#
# st_write(sf_1718,
#         "~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1718.shp",
#         driver = "ESRI Shapefile")
#
st_write(sf_1920,
"~/Clark/RA-ing/SummerInstitute/USF/localdrive/sf_1920.shp",
driver = "ESRI Shapefile")
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
v1 <- sample(0:100, 20, replace = TRUE)
v1
set.seed(1)
v2 <- sample(1:10, 20, replace = TRUE)
v2
set.seed(1)
v3 <- runif(n = 20, min = 0, max = 1)
v3
set.seed(1)
v4 <- LETTERS[v2]
v4
m1 <- cbind(v1, v2)
m1
m2 <- cbind(v2, v3)
m2
m3 <- cbind(v3, v4)
m3
DF <- data.frame(v1, v2, v3, v4)
DF
colnames(DF) <- c("a", "b", "c", "grp")
DF
mycalc(DF[[1, 1]], DF[[1, 2]], "multiply")
mycalc(DF[1:10, 1:3], DF[1:10, 1:3], "multiply")
mycalc(DF[DF$grp=="E", c("a", "b")], DF[DF$grp=="E", "c"], "divide")
c(DF$a, DF$b)/c(DF$c, 5)
library(USF)
# NYC Complaints (NYCLU)
data(nyc_complaints) # only by precinct
force(nyc_complaints)
# NYC Police Department data
data(nypd_complaints)
nyc_complaints %>% group_by(Precinct) %>% count() # spatialize by precinct
precint_complaints <- nyc_complaints %>% group_by(Precinct) %>% count() # spatialize by precinct
summatize(precint_complaints)
summarize(precint_complaints)
max(precint_complaints$n)
precint_complaints[1]
precint_complaints[1, 1]
precint_complaints[1, 2]
precint_complaints %>% arrange(-n)
precint_complaints %>% arrange(n)
nyc_complaints$Allegation
nyc_complaints$Allegation %>% unique()
nyc_complaints %>%
filter( grepl("Refusal", Allegation) |
grepl("Threat", Allegation) |
grepl("Statement", Allegation) |
grepl("Sex", Allegation))
allegations_sample <- nyc_complaints %>%
filter( grepl("Refusal", Allegation) |
grepl("Threat", Allegation) |
grepl("Statement", Allegation) |
grepl("Sex", Allegation))
allegations_sample %>% group_by(FADOType)
nyc_complaints$FADOType %>% unique()
nyc_complaints %>% group_by(FADOType)
nyc_complaints %>% group_by(FADOType) %>% count()
nyc_complaints$IncidentDate %>% unique()
max(nyc_complaints$IncidentDate)
min(nyc_complaints$IncidentDate)
min(nyc_complaints$IncidentDate %>% na.omit())
nyc_complaints$IncidentDate %>% na.omit()
nyc_complaints$IncidentDate %>% na.omit() %>% min()
nyc_complaints$IncidentDate %>% arrange()
l:length(nyc_complaints$IncidentDate)
1:length(nyc_complaints$IncidentDate)
# locations
nyc_complaints$LocationType %>% unique()
nyc_complaints %>% group_by(LocationType) %>% count()
nyc_complaints %>% group_by(LocationType) %>% count() %>% arrange(n)
nyc_complaints$NYPDDisposition %>% unique()
nyc_complaints %>%
filter( grepl("Guilty", NYPDDisposition))
nyc_complaints$ImpactedRace %>% unique()
nyc_complaints %>% group_by(ImpactedRace) %>% count()
nyc_complaints %>% group_by(ImpactedRace) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedGender) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedAge) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedAge)
nyc_complaints$ImpactedAge
nyc_complaints %>% group_by(ImpactedAge)
nyc_complaints %>% group_by(ImpactedAge) %>% arrange(n)
nyc_complaints %>% group_by(ImpactedAge) %>% arrange()
nyc_complaints$ImpactedAge %>% arrange()
nyc_complaints$ImpactedAge %>% group_by()
nyc_complaints$ImpactedAge %>% frequency()
# Police Misconduct (NYCLU)
data(nyc_complaints)
# Precinct with most complaints
precint_complaints <- nyc_complaints %>% group_by(Precinct) %>% count() # spatialize by precinct
precint_complaints %>% arrange(-n)
precint_complaints %>% arrange(n)
# Allegation of misconduct
nyc_complaints %>% group_by(FADOType) %>% count()
# date distribution
max(nyc_complaints$IncidentDate)
# Sites of abuse/threat/misconduct
nyc_complaints %>% group_by(LocationType) %>% count() %>% arrange(n)
# Rule
nyc_complaints$NYPDDisposition %>% unique()
nyc_complaints %>%
filter( grepl("Guilty", NYPDDisposition))
# "Impacted .." demographics
nyc_complaints %>% group_by(ImpactedRace) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedGender) %>% count() %>% arrange(n)
nyc_complaints$ImpactedAge
nyc_complaints$ImpactedAge %>% unique()
# Select misconducts based on query
allegations_sample <- nyc_complaints %>%
filter( grepl("Refusal", Allegation) |
grepl("Threat", Allegation) |
grepl("Statement", Allegation) |
grepl("Sex", Allegation))
nyc_complaints$ImpactedAge %>% unique()
# Police Misconduct (NYCLU)
data(nyc_complaints)
# Precinct with most complaints
precint_complaints <- nyc_complaints %>% group_by(Precinct) %>% count() # spatialize by precinct
precint_complaints %>% arrange(-n)
precint_complaints %>% arrange(n)
# Allegation of misconduct
nyc_complaints %>% group_by(FADOType) %>% count()
# date distribution
max(nyc_complaints$IncidentDate)
# Sites of abuse/threat/misconduct
nyc_complaints %>% group_by(LocationType) %>% count() %>% arrange(n)
# Rule
nyc_complaints$NYPDDisposition %>% unique()
nyc_complaints %>%
filter( grepl("Guilty", NYPDDisposition))
# "Impacted .." demographics
nyc_complaints %>% group_by(ImpactedRace) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedGender) %>% count() %>% arrange(n)
nyc_complaints$ImpactedAge
nyc_complaints$ImpactedAge %>% unique() %>% frequency()
# Select misconducts based on query
allegations_sample <- nyc_complaints %>%
filter( grepl("Refusal", Allegation) |
grepl("Threat", Allegation) |
grepl("Statement", Allegation) |
grepl("Sex", Allegation))
nyc_complaints$ImpactedAge %>% unique() %>% frequency()
nyc_complaints$ImpactedAge %>% unique()
nyc_complaints$ImpactedAge %>% unique() %>% count()
nyc_complaints$ImpactedAge %>% count()
nyc_complaints %>% group_by(ImpactedAge) %>% count() %>% arrange(n)
nyc_complaints %>% group_by(ImpactedAge) %>% count() %>% arrange(-n)
